apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app: {{ etcd_backup_cronjob }}
  name: {{ etcd_backup_cronjob }}
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 5
  jobTemplate:
    metadata:
      labels:
        app: {{ etcd_backup_cronjob }}
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: {{ etcd_backup_cronjob }}
        spec:
          activeDeadlineSeconds: 500
          containers:
          - command:
            - /bin/bash
            - -c
            - cp -rp /tmp/etcd-backup/backup/* /tmp/pvc-backup/${environment}/ &&
              find /tmp/pvc-backup/${environment} -type f -mtime +"15" -delete
            env:
            - name: environment
              value: {{ ocp_cluster_name }}
            image: registry.redhat.io/openshift4/ose-cli:v4.10.0
            imagePullPolicy: IfNotPresent
            name: copy
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tmp/etcd-backup
              name: etcd-backup-host
            - mountPath: /tmp/pvc-backup
              name: etcd-backup-nfs-vol
          dnsPolicy: ClusterFirst
          hostPID: true
          initContainers:
          - command:
            - /bin/bash
            - -vc
            - oc debug node/$MASTER_NODE_NAME -- bash -c 'chroot /host sudo -E mkdir
              -p /home/core/backup && chroot /host sudo -E /usr/local/bin/cluster-backup.sh
              /home/core/backup/ && chroot /host sudo -E find /home/core/backup -type
              f -mmin +"15" -delete'
            env:
            - name: MASTER_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            image: registry.redhat.io/openshift4/ose-cli
            imagePullPolicy: IfNotPresent
            name: backup
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          nodeSelector:
            node-role.kubernetes.io/master: ""
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: {{ etcd_backup_service_account }}
          serviceAccountName: {{ etcd_backup_service_account }}
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
          volumes:
          - name: etcd-backup-nfs-vol
            persistentVolumeClaim:
              claimName: {{ etcd_backup_pvc }}
          - hostPath:
              path: /home/core
              type: Directory
            name: etcd-backup-host
  schedule: 35 04 * * *
  successfulJobsHistoryLimit: 5
  suspend: false